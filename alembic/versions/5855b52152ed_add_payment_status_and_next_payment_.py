"""add payment_status and next_payment_date fields in usermodel

Revision ID: 5855b52152ed
Revises: 
Create Date: 2025-06-07 12:31:35.598994

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5855b52152ed'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('mares')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mares',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('mare_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('mare_type', postgresql.ENUM('RECEIVER', 'HEADQUARTERS', name='maretype'), autoincrement=False, nullable=False),
    sa.Column('stallion_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_owner', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('donor_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pregnancy_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('active_pregnancy', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_owner'], ['users.id'], name=op.f('mares_user_owner_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('mares_pkey'))
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey')),
    sa.UniqueConstraint('username', name=op.f('users_username_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
